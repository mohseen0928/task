from scapy.all import sniff, IP, TCP, UDP, Raw

def analyze_packet(packet):
    print("=" * 60)
    
    if IP in packet:
        ip_layer = packet[IP]
        print(f"[+] Source IP: {ip_layer.src}")
        print(f"[+] Destination IP: {ip_layer.dst}")
        print(f"[+] Protocol: {ip_layer.proto}")

    if TCP in packet or UDP in packet:
        proto_layer = packet[TCP] if TCP in packet else packet[UDP]
        print(f"[+] Source Port: {proto_layer.sport}")
        print(f"[+] Destination Port: {proto_layer.dport}")

    if Raw in packet:
        print("[+] Payload:")
        try:
            print(packet[Raw].load.decode(errors='ignore'))
        except:
            print(" [Binary data]")

print("Sniffing packets... Press Ctrl+C to stop.\n")
sniff(filter="ip", prn=analyze_packet, store=0)
